name: Build Project

on:
  #push:
    #branches: main
  workflow_dispatch:

env:
  IMAGE_TAG: latest
  ECS_TASK_DEFINITION: .ecs/DemoTask-revision1.json
  CONTAINER_NAME: ${{ secrets.CONTAINER_NAME }}
  ECS_SERVICE: democt-service
  ECS_CLUSTER: DemoCT

jobs:
  push_to_registry:
    name: Build docker image
    runs-on: ubuntu-latest
    permissions: 
      id-token: write
      contents: read
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Build with Maven
        run: mvn -B package --file java-maven-sonar-argocd-helm-k8s/spring-boot-app/pom.xml

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: ${{ secrets.AWS_DEPLOYER }}
          aws-region: us-east-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and tag the image
        id: build-image
        env:
           ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
         echo $ECR_REGISTRY
         # Build a docker container and push it to ECR so that it can be deployed to ECS.
         docker build -t $ECR_REGISTRY/${{ secrets.ECR_REPOSITORY }}:$IMAGE_TAG ./java-maven-sonar-argocd-helm-k8s/spring-boot-app
         
         #Push the image to Amazon ECR
         docker push $ECR_REGISTRY/${{ secrets.ECR_REPOSITORY }}:$IMAGE_TAG

         echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ${{ env.ECS_TASK_DEFINITION }}
          container-name: ${{ env.CONTAINER_NAME }}
          image: ${{ steps.build-image.outputs.image }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: ${{ env.ECS_SERVICE }}
          cluster: ${{ env.ECS_CLUSTER }}
          wait-for-service-stability: true
